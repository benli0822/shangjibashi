-- MySQL Script generated by MySQL Workbench
-- Wed Dec 10 14:01:35 2014
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

DROP SCHEMA IF EXISTS `jb_menu_design` );

DROP TABLE IF EXISTS `md_dish` );


CREATE TABLE IF NOT EXISTS `md_dish` (
  `id` BIGINTEGER NOT NULL PRIMARY KEY AUTOINCREMENT ,
  `name` VARCHAR(45) NOT NULL ,
  `is_typed` TINYINT(1) NOT NULL DEFAULT 0 ,
  `img_path` VARCHAR(45) NULL,
  `description` VARCHAR(45) NULL,
  `disabled` TINYINT(1) NOT NULL DEFAULT 0,
  `start_time` TIME NULL,
  `end_time` TIME NULL);



DROP TABLE IF EXISTS `md_user` );


CREATE TABLE IF NOT EXISTS `md_user` (
  `id` BIGINTEGER NOT NULL PRIMARY KEY AUTOINCREMENT ,
  `name` VARCHAR(45) NULL ,
  `passwd` VARCHAR(45) NULL ,
  `type` VARCHAR(45) NULL DEFAULT 0 );



DROP TABLE IF EXISTS `md_menu` );


CREATE TABLE IF NOT EXISTS `md_menu` (
  `id` BIGINTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  `name` VARCHAR(45) NULL ,
  `start_time` TIME NULL,
  `end_time` TIME NULL);



DROP TABLE IF EXISTS `md_menu_dish` );


CREATE TABLE IF NOT EXISTS `md_menu_dish` (
  `id` BIGINTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  `dish_id` BIGINT(10) NOT NULL ,
  `menu_id` BIGINT(10) NOT NULL ,
  CONSTRAINT `md_dish_key`
    FOREIGN KEY (`dish_id`)
    REFERENCES `md_dish` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `md_menu_key`
    FOREIGN KEY (`menu_id`)
    REFERENCES `md_menu` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;


DROP TABLE IF EXISTS `md_activity` );


CREATE TABLE IF NOT EXISTS `md_activity` (
  `id` BIGINTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  `name` VARCHAR(45) NULL,
  `start_time` TIME NULL,
  `end_time` TIME NULL);




DROP TABLE IF EXISTS `md_activity_dish` );


CREATE TABLE IF NOT EXISTS `md_activity_dish` (
  `id` BIGINTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  `dish_id` BIGINT(10) NOT NULL,
  `activity_id` BIGINT(10) NOT NULL,
  CONSTRAINT `ad_activity_key`
    FOREIGN KEY (`activity_id`)
    REFERENCES `md_activity` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `ad_dish_key`
    FOREIGN KEY (`dish_id`)
    REFERENCES `md_dish` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)

PACK_KEYS = Default);



DROP TABLE IF EXISTS `md_command` );


CREATE TABLE IF NOT EXISTS `md_command` (
  `id` BIGINTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  `table` INT NULL,
  `title` VARCHAR(45) NULL,
  `order_time` TIME NULL,
  `table_no` INT NULL,
  `client_no` INT NULL);


DROP TABLE IF EXISTS `md_command_dish` );


CREATE TABLE IF NOT EXISTS `md_command_dish` (
  `id` BIGINTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  `command_id` BIGINT(10) NOT NULL,
  `dish_id` BIGINT(10) NOT NULL,
  `quantity` INT NULL,
  CONSTRAINT `cd_command_key`
    FOREIGN KEY (`command_id`)
    REFERENCES `md_command` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `cd_dish_key`
    FOREIGN KEY (`dish_id`)
    REFERENCES `md_dish` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;




DROP TABLE IF EXISTS `md_command_menu` );


CREATE TABLE IF NOT EXISTS `md_command_menu` (
  `id` BIGINTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  `command_id` BIGINT(10) NOT NULL,
  `menu_id` BIGINT(10) NOT NULL,
  `quantity` INT NULL,
  CONSTRAINT `cm_command_key`
    FOREIGN KEY (`command_id`)
    REFERENCES `md_command` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `cm_menu_key`
    FOREIGN KEY (`menu_id`)
    REFERENCES `md_menu` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;


DROP TABLE IF EXISTS `md_types` );


CREATE TABLE IF NOT EXISTS `md_types` (
  `id` BIGINT(10) NOT NULL,
  `is_firstmenu` TINYINT(1) NULL,
  `is_secondmenu` TINYINT(1) NULL,
  `firstmenu_id` BIGINT(10) NOT NULL ,
  `name` VARCHAR(45) NULL ,
  `description` VARCHAR(45) NULL,
  `is_for_customize` TINYINT(1) NULL);


DROP TABLE IF EXISTS `md_conflict_dish_type` );


CREATE TABLE IF NOT EXISTS `md_conflict_dish_type` (
  `id` BIGINTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  `type_id` BIGINT(10) NOT NULL,
  `conflict_id` BIGINT(10) NOT NULL,
  CONSTRAINT `cdt_type_key`
    FOREIGN KEY (`type_id`)
    REFERENCES `md_types` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `cdt_conflict_type_key`
    FOREIGN KEY (`conflict_id`)
    REFERENCES `md_types` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;




DROP TABLE IF EXISTS `md_command_activity` );


CREATE TABLE IF NOT EXISTS `md_command_activity` (
  `id` BIGINTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  `command_id` BIGINT(10) NOT NULL,
  `activity_id` BIGINT(10) NOT NULL,
  `quantity` INT NULL,
  CONSTRAINT `ca_command_key`
    FOREIGN KEY (`command_id`)
    REFERENCES `md_command` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `ca_activity_key`
    FOREIGN KEY (`activity_id`)
    REFERENCES `md_activity` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;



DROP TABLE IF EXISTS `md_dish_type` );


CREATE TABLE IF NOT EXISTS `md_dish_type` (
  `id` BIGINTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  `dish_id` BIGINT(10) NOT NULL,
  `type_id` BIGINT(10) NOT NULL,
  CONSTRAINT `dt_dish_key`
    FOREIGN KEY (`dish_id`)
    REFERENCES `md_dish` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `dt_type_key`
    FOREIGN KEY (`type_id`)
    REFERENCES `md_types` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;



DROP TABLE IF EXISTS `md_options` );


CREATE TABLE IF NOT EXISTS `md_options` (
  `id` BIGINTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  `name` VARCHAR(45) NULL);



DROP TABLE IF EXISTS `md_dish_option` );


CREATE TABLE IF NOT EXISTS `md_dish_option` (
  `id` BIGINTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  `dish_id` BIGINT(10) NOT NULL,
  `option_id` BIGINT(10) NOT NULL,
  CONSTRAINT `do_option_key`
    FOREIGN KEY (`option_id`)
    REFERENCES `md_options` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `do_dish_key`
    FOREIGN KEY (`dish_id`)
    REFERENCES `md_dish` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;




DROP VIEW IF EXISTS `Tree Error Node` );

DROP TABLE IF EXISTS `Tree Error Node`);


CREATE INDEX `id_UNIQUE` on `md_dish` (`id` ASC);
CREATE INDEX `id_UNIQUE` on `md_user` (`id` ASC);
CREATE INDEX `id_UNIQUE` on `md_menu` (`id` ASC);
CREATE INDEX `id_UNIQUE` on `md_menu_dish` (`id` ASC);
CREATE INDEX `md_dish_key_idx` on `md_menu_dish` (`dish_id` ASC);
CREATE INDEX `md_menu_key_idx` on `md_menu_dish` (`menu_id` ASC);
CREATE INDEX `id_UNIQUE` on `md_activity` (`id` ASC);
CREATE INDEX `id_UNIQUE` on `md_activity_dish` (`id` ASC);
CREATE INDEX `ad_activity_key_idx` on `md_activity_dish` (`activity_id` ASC);
CREATE INDEX `ad_dish_key_idx` on `md_activity_dish` (`dish_id` ASC);
CREATE INDEX `id_UNIQUE` on `md_command` (`id` ASC);
CREATE INDEX `id_UNIQUE` on `md_command_dish` (`id` ASC);
CREATE INDEX `cd_command_key_idx` on `md_command_dish` (`command_id` ASC);
CREATE INDEX `cd_dish_key_idx` on `md_command_dish` (`dish_id` ASC);
CREATE INDEX `id_UNIQUE` on `md_command_menu` (`id` ASC);
CREATE INDEX `cm_command_key_idx` on `md_command_menu` (`command_id` ASC);
CREATE INDEX `cm_menu_key_idx` on `md_command_menu` (`menu_id` ASC);
CREATE INDEX `id_UNIQUE` on `md_conflict_dish_type` (`id` ASC);
CREATE INDEX `cdt_type_key_idx` on `md_conflict_dish_type` (`type_id` ASC);
CREATE INDEX `cdt_conflict_type_key_idx` on `md_conflict_dish_type` (`conflict_id` ASC);
CREATE INDEX `id_UNIQUE` on `md_command_activity` (`id` ASC);
CREATE INDEX `ca_command_key_idx` on `md_command_activity` (`command_id` ASC);
CREATE INDEX `ca_activity_key_idx` on `md_command_activity` (`activity_id` ASC);
CREATE INDEX `id_UNIQUE` on `md_dish_type` (`id` ASC);
CREATE INDEX `dt_dish_key_idx` on `md_dish_type` (`dish_id` ASC);
CREATE INDEX `dt_type_key_idx` on `md_dish_type` (`type_id` ASC);
CREATE INDEX `id_UNIQUE` on `md_options` (`id` ASC);
CREATE INDEX `id_UNIQUE` on `md_dish_option` (`id` ASC);
CREATE INDEX `do_option_key_idx` on `md_dish_option` (`option_id` ASC);
CREATE INDEX `do_dish_key_idx` on `md_dish_option` (`dish_id` ASC);

